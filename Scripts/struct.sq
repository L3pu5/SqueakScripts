include './test/std.sq'
seed random

reserve GetStdHandle 
reserve WriteConsole
reserve hConsole
reserve ExitProcess
reserve hUser32
reserve VirtualAlloc
reserve wsprintfA
reserve ptr
reserve length
reserve ReadConsole
reserve hConsoleIn
reserve ptrtwo
reserve lentwo
reserve ErrorCode


stdcall std-GetProcAddress (std-Kernel32, 'GetStdHandle')   -> GetStdHandle
stdcall std-GetProcAddress (std-Kernel32, 'WriteConsoleA')  -> WriteConsole
stdcall std-GetProcAddress (std-Kernel32, 'ReadFile')    -> ReadConsole 
stdcall std-GetProcAddress (std-Kernel32, 'VirtualAlloc')   -> VirtualAlloc
stdcall std-LoadLibraryA   ('User32.dll')                   -> hUser32
stdcall std-GetProcAddress (hUser32, 'wsprintfA')           -> wsprintfA

stdcall VirtualAlloc ($NULL, 1024, $MEM_COMMIT_RESERVE, $PAGE_EXECUTE_READWRITE) -> ptr

stdcall GetStdHandle ($STD_OUTPUT_HANDLE) -> hConsole
cdecall wsprintfA (ptr, "Enter:\n") -> length


struct {
    DWORD asd;
    DWORD elephant;
    DWORD efg;
    DWORD hij;
} PEB


reserve e as PEB

move 12 -> e.asd

stdcall GetStdHandle ($STD_OUTPUT_HANDLE) -> hConsole
cdecall wsprintfA (ptr, "A: %d\n", e.asd ) -> length
stdcall WriteConsole (hConsole, ptr, length, _, $NULL)


move 44 -> e.asd
add e.asd 444

stdcall GetStdHandle ($STD_OUTPUT_HANDLE) -> hConsole
cdecall wsprintfA (ptr, "A: %d\n", e.asd ) -> length
stdcall WriteConsole (hConsole, ptr, length, _, $NULL)


stdcall GetStdHandle ($STD_OUTPUT_HANDLE) -> hConsole
cdecall wsprintfA (ptr, "B: %d\n", e.efg ) -> length
stdcall WriteConsole (hConsole, ptr, length, _, $NULL)

#To Write after reading you need to regain the handle, I'm not sure the specifics of this, probably something to do with
# Set handles and the lifetimes of handles in Windows Internal?
# https://learn.microsoft.com/en-us/windows/console/getstdhandle
#stdcall GetStdHandle ($STD_OUTPUT_HANDLE) -> hConsole
#stdcall WriteConsole (hConsole, ptrtwo, lentwo, _, $NULL)
#stdcall WriteConsole (hConsole, ptrtwo, lentwo, _, $NULL)

stdcall std-ExitProcess ( 0 )
